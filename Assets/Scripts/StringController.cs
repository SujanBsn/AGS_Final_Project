//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Scripts/StringControl.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @StringController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @StringController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""StringControl"",
    ""maps"": [
        {
            ""name"": ""StringControls"",
            ""id"": ""3ca655ef-0660-44dc-8a89-1c0612e19fa6"",
            ""actions"": [
                {
                    ""name"": ""StrumGuitar"",
                    ""type"": ""Button"",
                    ""id"": ""b42fa0ea-ac40-4e11-9b56-d3284643558a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HammerNote"",
                    ""type"": ""Button"",
                    ""id"": ""1d7d495d-494a-482a-85a2-6c3950c1dd06"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseClick"",
                    ""type"": ""Button"",
                    ""id"": ""3e1297f3-1c8e-448e-8cc6-989a6d902a2b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Bend"",
                    ""type"": ""Button"",
                    ""id"": ""f2497e21-6017-40d5-8c38-49170cfb12c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ae4901e6-0928-4f2c-b792-270622a5d45e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""StrumGuitar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2f8ab976-2dae-482d-a515-b3d18d879876"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HammerNote"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1e09ace4-2047-4254-ad9a-590c45e56339"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""facba7df-63bb-4e4c-b5d6-462f24360eaf"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Bend"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""StringMute"",
            ""id"": ""8733a1fa-d50a-4426-9499-5cf80b5ed31e"",
            ""actions"": [
                {
                    ""name"": ""String1Mute"",
                    ""type"": ""Button"",
                    ""id"": ""282cacbb-41fc-49f6-97f2-6c836bd3f3fe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String2Mute"",
                    ""type"": ""Button"",
                    ""id"": ""0a082c52-c6a0-4668-9438-d77ebeb733a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String3Mute"",
                    ""type"": ""Button"",
                    ""id"": ""917c8c40-fe55-4b96-b627-3517e187aa44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String4Mute"",
                    ""type"": ""Button"",
                    ""id"": ""b4089348-94ef-4f94-9b1b-ef253bd38c4b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String5Mute"",
                    ""type"": ""Button"",
                    ""id"": ""9317011f-8e96-4de1-8196-f16c83e6a9b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String6Mute"",
                    ""type"": ""Button"",
                    ""id"": ""b9a6a903-d983-4252-93bd-f5fe32d27c54"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d8eab2f4-0ed8-45ae-a326-4b61e2509b8a"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String1Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f165bcb6-6f49-47fe-9ec7-b99622e5ee0e"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String2Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e1b89cb1-258b-4297-b2f0-dfda5430f2dc"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String3Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""89e4bd51-13cc-4b85-b3ce-4f1833306856"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String4Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee1bee2f-3b9d-4708-8b42-a248c9219641"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String5Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb55e703-2b13-4ede-987f-8f287367352d"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String6Mute"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlaySingle"",
            ""id"": ""223ea2cb-4948-4d73-bf02-c5358113097c"",
            ""actions"": [
                {
                    ""name"": ""String1"",
                    ""type"": ""Button"",
                    ""id"": ""ca21c796-1bd6-418f-bbc5-d702519d8826"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String2"",
                    ""type"": ""Button"",
                    ""id"": ""abfb3b8c-7780-48e3-a53f-be2d2fca00a9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String3"",
                    ""type"": ""Button"",
                    ""id"": ""82cd9981-7da5-4546-912f-b30c8abb5975"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String4"",
                    ""type"": ""Button"",
                    ""id"": ""639f59ce-63e3-404f-8f3a-b3b156bdeed9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String5"",
                    ""type"": ""Button"",
                    ""id"": ""a821dfa1-34ef-412f-a4a7-56588e348239"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""String6"",
                    ""type"": ""Button"",
                    ""id"": ""fc757780-77a2-40fe-89b9-d484aa1be77d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""12908026-f15c-48ac-927d-4736b7164350"",
                    ""path"": ""<Keyboard>/numpad1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""605970de-9c9f-4f1b-a9f0-6cd3448a9913"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""69a6f659-a05d-4ed9-9e03-2040fba105fd"",
                    ""path"": ""<Keyboard>/numpad3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""883e55c9-c033-40a4-ae74-b0535a3b0dff"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f9056f21-89ab-47cc-8619-3192e105b6f0"",
                    ""path"": ""<Keyboard>/numpad5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dfaa35ff-baa6-495d-b102-9b903010703b"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""String6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // StringControls
        m_StringControls = asset.FindActionMap("StringControls", throwIfNotFound: true);
        m_StringControls_StrumGuitar = m_StringControls.FindAction("StrumGuitar", throwIfNotFound: true);
        m_StringControls_HammerNote = m_StringControls.FindAction("HammerNote", throwIfNotFound: true);
        m_StringControls_MouseClick = m_StringControls.FindAction("MouseClick", throwIfNotFound: true);
        m_StringControls_Bend = m_StringControls.FindAction("Bend", throwIfNotFound: true);
        // StringMute
        m_StringMute = asset.FindActionMap("StringMute", throwIfNotFound: true);
        m_StringMute_String1Mute = m_StringMute.FindAction("String1Mute", throwIfNotFound: true);
        m_StringMute_String2Mute = m_StringMute.FindAction("String2Mute", throwIfNotFound: true);
        m_StringMute_String3Mute = m_StringMute.FindAction("String3Mute", throwIfNotFound: true);
        m_StringMute_String4Mute = m_StringMute.FindAction("String4Mute", throwIfNotFound: true);
        m_StringMute_String5Mute = m_StringMute.FindAction("String5Mute", throwIfNotFound: true);
        m_StringMute_String6Mute = m_StringMute.FindAction("String6Mute", throwIfNotFound: true);
        // PlaySingle
        m_PlaySingle = asset.FindActionMap("PlaySingle", throwIfNotFound: true);
        m_PlaySingle_String1 = m_PlaySingle.FindAction("String1", throwIfNotFound: true);
        m_PlaySingle_String2 = m_PlaySingle.FindAction("String2", throwIfNotFound: true);
        m_PlaySingle_String3 = m_PlaySingle.FindAction("String3", throwIfNotFound: true);
        m_PlaySingle_String4 = m_PlaySingle.FindAction("String4", throwIfNotFound: true);
        m_PlaySingle_String5 = m_PlaySingle.FindAction("String5", throwIfNotFound: true);
        m_PlaySingle_String6 = m_PlaySingle.FindAction("String6", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // StringControls
    private readonly InputActionMap m_StringControls;
    private List<IStringControlsActions> m_StringControlsActionsCallbackInterfaces = new List<IStringControlsActions>();
    private readonly InputAction m_StringControls_StrumGuitar;
    private readonly InputAction m_StringControls_HammerNote;
    private readonly InputAction m_StringControls_MouseClick;
    private readonly InputAction m_StringControls_Bend;
    public struct StringControlsActions
    {
        private @StringController m_Wrapper;
        public StringControlsActions(@StringController wrapper) { m_Wrapper = wrapper; }
        public InputAction @StrumGuitar => m_Wrapper.m_StringControls_StrumGuitar;
        public InputAction @HammerNote => m_Wrapper.m_StringControls_HammerNote;
        public InputAction @MouseClick => m_Wrapper.m_StringControls_MouseClick;
        public InputAction @Bend => m_Wrapper.m_StringControls_Bend;
        public InputActionMap Get() { return m_Wrapper.m_StringControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StringControlsActions set) { return set.Get(); }
        public void AddCallbacks(IStringControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_StringControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_StringControlsActionsCallbackInterfaces.Add(instance);
            @StrumGuitar.started += instance.OnStrumGuitar;
            @StrumGuitar.performed += instance.OnStrumGuitar;
            @StrumGuitar.canceled += instance.OnStrumGuitar;
            @HammerNote.started += instance.OnHammerNote;
            @HammerNote.performed += instance.OnHammerNote;
            @HammerNote.canceled += instance.OnHammerNote;
            @MouseClick.started += instance.OnMouseClick;
            @MouseClick.performed += instance.OnMouseClick;
            @MouseClick.canceled += instance.OnMouseClick;
            @Bend.started += instance.OnBend;
            @Bend.performed += instance.OnBend;
            @Bend.canceled += instance.OnBend;
        }

        private void UnregisterCallbacks(IStringControlsActions instance)
        {
            @StrumGuitar.started -= instance.OnStrumGuitar;
            @StrumGuitar.performed -= instance.OnStrumGuitar;
            @StrumGuitar.canceled -= instance.OnStrumGuitar;
            @HammerNote.started -= instance.OnHammerNote;
            @HammerNote.performed -= instance.OnHammerNote;
            @HammerNote.canceled -= instance.OnHammerNote;
            @MouseClick.started -= instance.OnMouseClick;
            @MouseClick.performed -= instance.OnMouseClick;
            @MouseClick.canceled -= instance.OnMouseClick;
            @Bend.started -= instance.OnBend;
            @Bend.performed -= instance.OnBend;
            @Bend.canceled -= instance.OnBend;
        }

        public void RemoveCallbacks(IStringControlsActions instance)
        {
            if (m_Wrapper.m_StringControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IStringControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_StringControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_StringControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public StringControlsActions @StringControls => new StringControlsActions(this);

    // StringMute
    private readonly InputActionMap m_StringMute;
    private List<IStringMuteActions> m_StringMuteActionsCallbackInterfaces = new List<IStringMuteActions>();
    private readonly InputAction m_StringMute_String1Mute;
    private readonly InputAction m_StringMute_String2Mute;
    private readonly InputAction m_StringMute_String3Mute;
    private readonly InputAction m_StringMute_String4Mute;
    private readonly InputAction m_StringMute_String5Mute;
    private readonly InputAction m_StringMute_String6Mute;
    public struct StringMuteActions
    {
        private @StringController m_Wrapper;
        public StringMuteActions(@StringController wrapper) { m_Wrapper = wrapper; }
        public InputAction @String1Mute => m_Wrapper.m_StringMute_String1Mute;
        public InputAction @String2Mute => m_Wrapper.m_StringMute_String2Mute;
        public InputAction @String3Mute => m_Wrapper.m_StringMute_String3Mute;
        public InputAction @String4Mute => m_Wrapper.m_StringMute_String4Mute;
        public InputAction @String5Mute => m_Wrapper.m_StringMute_String5Mute;
        public InputAction @String6Mute => m_Wrapper.m_StringMute_String6Mute;
        public InputActionMap Get() { return m_Wrapper.m_StringMute; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(StringMuteActions set) { return set.Get(); }
        public void AddCallbacks(IStringMuteActions instance)
        {
            if (instance == null || m_Wrapper.m_StringMuteActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_StringMuteActionsCallbackInterfaces.Add(instance);
            @String1Mute.started += instance.OnString1Mute;
            @String1Mute.performed += instance.OnString1Mute;
            @String1Mute.canceled += instance.OnString1Mute;
            @String2Mute.started += instance.OnString2Mute;
            @String2Mute.performed += instance.OnString2Mute;
            @String2Mute.canceled += instance.OnString2Mute;
            @String3Mute.started += instance.OnString3Mute;
            @String3Mute.performed += instance.OnString3Mute;
            @String3Mute.canceled += instance.OnString3Mute;
            @String4Mute.started += instance.OnString4Mute;
            @String4Mute.performed += instance.OnString4Mute;
            @String4Mute.canceled += instance.OnString4Mute;
            @String5Mute.started += instance.OnString5Mute;
            @String5Mute.performed += instance.OnString5Mute;
            @String5Mute.canceled += instance.OnString5Mute;
            @String6Mute.started += instance.OnString6Mute;
            @String6Mute.performed += instance.OnString6Mute;
            @String6Mute.canceled += instance.OnString6Mute;
        }

        private void UnregisterCallbacks(IStringMuteActions instance)
        {
            @String1Mute.started -= instance.OnString1Mute;
            @String1Mute.performed -= instance.OnString1Mute;
            @String1Mute.canceled -= instance.OnString1Mute;
            @String2Mute.started -= instance.OnString2Mute;
            @String2Mute.performed -= instance.OnString2Mute;
            @String2Mute.canceled -= instance.OnString2Mute;
            @String3Mute.started -= instance.OnString3Mute;
            @String3Mute.performed -= instance.OnString3Mute;
            @String3Mute.canceled -= instance.OnString3Mute;
            @String4Mute.started -= instance.OnString4Mute;
            @String4Mute.performed -= instance.OnString4Mute;
            @String4Mute.canceled -= instance.OnString4Mute;
            @String5Mute.started -= instance.OnString5Mute;
            @String5Mute.performed -= instance.OnString5Mute;
            @String5Mute.canceled -= instance.OnString5Mute;
            @String6Mute.started -= instance.OnString6Mute;
            @String6Mute.performed -= instance.OnString6Mute;
            @String6Mute.canceled -= instance.OnString6Mute;
        }

        public void RemoveCallbacks(IStringMuteActions instance)
        {
            if (m_Wrapper.m_StringMuteActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IStringMuteActions instance)
        {
            foreach (var item in m_Wrapper.m_StringMuteActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_StringMuteActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public StringMuteActions @StringMute => new StringMuteActions(this);

    // PlaySingle
    private readonly InputActionMap m_PlaySingle;
    private List<IPlaySingleActions> m_PlaySingleActionsCallbackInterfaces = new List<IPlaySingleActions>();
    private readonly InputAction m_PlaySingle_String1;
    private readonly InputAction m_PlaySingle_String2;
    private readonly InputAction m_PlaySingle_String3;
    private readonly InputAction m_PlaySingle_String4;
    private readonly InputAction m_PlaySingle_String5;
    private readonly InputAction m_PlaySingle_String6;
    public struct PlaySingleActions
    {
        private @StringController m_Wrapper;
        public PlaySingleActions(@StringController wrapper) { m_Wrapper = wrapper; }
        public InputAction @String1 => m_Wrapper.m_PlaySingle_String1;
        public InputAction @String2 => m_Wrapper.m_PlaySingle_String2;
        public InputAction @String3 => m_Wrapper.m_PlaySingle_String3;
        public InputAction @String4 => m_Wrapper.m_PlaySingle_String4;
        public InputAction @String5 => m_Wrapper.m_PlaySingle_String5;
        public InputAction @String6 => m_Wrapper.m_PlaySingle_String6;
        public InputActionMap Get() { return m_Wrapper.m_PlaySingle; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlaySingleActions set) { return set.Get(); }
        public void AddCallbacks(IPlaySingleActions instance)
        {
            if (instance == null || m_Wrapper.m_PlaySingleActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlaySingleActionsCallbackInterfaces.Add(instance);
            @String1.started += instance.OnString1;
            @String1.performed += instance.OnString1;
            @String1.canceled += instance.OnString1;
            @String2.started += instance.OnString2;
            @String2.performed += instance.OnString2;
            @String2.canceled += instance.OnString2;
            @String3.started += instance.OnString3;
            @String3.performed += instance.OnString3;
            @String3.canceled += instance.OnString3;
            @String4.started += instance.OnString4;
            @String4.performed += instance.OnString4;
            @String4.canceled += instance.OnString4;
            @String5.started += instance.OnString5;
            @String5.performed += instance.OnString5;
            @String5.canceled += instance.OnString5;
            @String6.started += instance.OnString6;
            @String6.performed += instance.OnString6;
            @String6.canceled += instance.OnString6;
        }

        private void UnregisterCallbacks(IPlaySingleActions instance)
        {
            @String1.started -= instance.OnString1;
            @String1.performed -= instance.OnString1;
            @String1.canceled -= instance.OnString1;
            @String2.started -= instance.OnString2;
            @String2.performed -= instance.OnString2;
            @String2.canceled -= instance.OnString2;
            @String3.started -= instance.OnString3;
            @String3.performed -= instance.OnString3;
            @String3.canceled -= instance.OnString3;
            @String4.started -= instance.OnString4;
            @String4.performed -= instance.OnString4;
            @String4.canceled -= instance.OnString4;
            @String5.started -= instance.OnString5;
            @String5.performed -= instance.OnString5;
            @String5.canceled -= instance.OnString5;
            @String6.started -= instance.OnString6;
            @String6.performed -= instance.OnString6;
            @String6.canceled -= instance.OnString6;
        }

        public void RemoveCallbacks(IPlaySingleActions instance)
        {
            if (m_Wrapper.m_PlaySingleActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlaySingleActions instance)
        {
            foreach (var item in m_Wrapper.m_PlaySingleActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlaySingleActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlaySingleActions @PlaySingle => new PlaySingleActions(this);
    public interface IStringControlsActions
    {
        void OnStrumGuitar(InputAction.CallbackContext context);
        void OnHammerNote(InputAction.CallbackContext context);
        void OnMouseClick(InputAction.CallbackContext context);
        void OnBend(InputAction.CallbackContext context);
    }
    public interface IStringMuteActions
    {
        void OnString1Mute(InputAction.CallbackContext context);
        void OnString2Mute(InputAction.CallbackContext context);
        void OnString3Mute(InputAction.CallbackContext context);
        void OnString4Mute(InputAction.CallbackContext context);
        void OnString5Mute(InputAction.CallbackContext context);
        void OnString6Mute(InputAction.CallbackContext context);
    }
    public interface IPlaySingleActions
    {
        void OnString1(InputAction.CallbackContext context);
        void OnString2(InputAction.CallbackContext context);
        void OnString3(InputAction.CallbackContext context);
        void OnString4(InputAction.CallbackContext context);
        void OnString5(InputAction.CallbackContext context);
        void OnString6(InputAction.CallbackContext context);
    }
}
